{"version":3,"sources":["styles/actionarea.module.css","styles/title.module.css","styles/actioncontainer.module.css","styles/screen.module.css","styles/header.module.css","styles/redirect.module.css","styles/cancelbutton.module.css","redux/array/types.js","logic/arrayLogic.js","redux/array/reducer.js","redux/algorithm/types.js","logic/algorithmsLogic.js","redux/algorithm/reducer.js","redux/animation/types.js","redux/animation/reducer.js","redux/rootReducer.js","redux/store.js","components/buttons/LargeButton.js","redux/array/actions.js","redux/animation/actions.js","components/buttons/SmallButton.js","redux/algorithm/actions.js","components/buttons/OrderButton.js","components/Title.js","components/ActionContainer.js","algorithms/bubbleSort.js","algorithms/selectionSort.js","algorithms/insertionSort.js","algorithms/quickSort.js","algorithms/mergeSort.js","components/ActionArea.js","components/ArrayMember.js","components/ArrayContainer.js","components/ToastMessage.js","components/Screen.js","components/Redirect.js","components/buttons/CancelButton.js","components/Header.js","components/ArrayControl.js","App.js","index.js","styles/app.module.css","styles/toastmessage.module.css"],"names":["module","exports","GENERATE_NEW_ARRAY","CHANGE_CURRENT_ARRAY","createNewArray","size","newArray","counter","number","Math","floor","random","indexInArray","className","arraySize","initialState","array","arrayReducer","state","action","type","payload","length","SET_ALGORITHM","SET_ORDER","algName","algNumber","orderName","orderNumber","algorithm","order","randomizeAlgsInfo","algorithmsReducer","SET_MILLISECONDS","SET_FRAMES","SET_STATUS","frames","status","milliseconds","framesSize","animationReducer","rootReducer","combineReducers","arrayData","algorithms","animation","store","createStore","composeWithDevTools","applyMiddleware","styles","width","height","position","left","borderRadius","fontFamily","marginBottom","LargeButton","active","title","Button","style","fontSize","border","backgroundColor","color","onClick","disabled","connect","React","memo","generateNewArray","setStatus","SmallButton","alg","setAlgorithm","marginLeft","display","flexDirection","paddingTop","dispatch","OrderButton","currentOrder","setOrder","Title","content","container","ActionContainer","children","bubbleSort","decreasing","rawArray","swapped","holder","copyArray","push","JSON","parse","stringify","selectionSort","criteria","selectionLimit","indexOfCriteria","Infinity","insertionSort","compare","quickSort","start","end","partition","subframes","pivot","pivotIndex","stack","top","positionOfNextPivot","concat","mergeSort","arr","n","curr_size","left_start","merge","l","m","r","i","j","k","n1","n2","L","R","positionL","positionR","indexInRawL","indexInRawR","min","ActionArea","setFrames","descending","sortedArray","sort","ArrayMember","instance","lastmember","margin","ArrayContainer","map","index","ToastMessage","message","closeToast","classes","closeButton","Screen","changeArray","changeStatus","animationInterval","useContext","IntervalContext","animationPosition","useRef","useEffect","current","setInterval","clearInterval","toast","POSITION","TOP_CENTER","hideProgressBar","changeCurrentArray","Redirect","text","url","textAlign","cursor","href","css","link","CancelButton","TOP_LEFT","Header","ArrayControl","right","generateArray","setMilliseconds","marginTop","thumbClassName","thumbActiveClassName","max","value","onChange","invert","createContext","configure","App","Provider","Grid","fluid","Row","main","Col","column","column1","rootNode","document","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.b3d2c423.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"actionarea_container__1jYmN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"title_container__3gqPN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"actioncontainer_container__1Q_z5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"screen_container__3nYra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__2icW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"redirect_link__1G7sS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cancelbutton_container__2bnhN\"};","export const GENERATE_NEW_ARRAY = 'GENERATE_NEW_ARRAY';\r\nexport const CHANGE_CURRENT_ARRAY = 'CHANGE_CURRENT_ARRAY';","export const createNewArray = size => {\r\n    let newArray = [];\r\n    for(let counter = 0; counter < size; counter++){\r\n        newArray[counter] = {\r\n            number: Math.floor(Math.random() * (201 - 5) + 5),\r\n            indexInArray: counter,\r\n            className: 'initial',\r\n        }\r\n    }\r\n    return newArray;\r\n}","import {\r\n    GENERATE_NEW_ARRAY,\r\n    CHANGE_CURRENT_ARRAY,\r\n} from './types';\r\nimport { createNewArray } from '../../logic/arrayLogic';\r\n\r\nconst arraySize = Math.floor(Math.random() * (120 - 5) + 5);\r\nconst initialState = {\r\n    array: createNewArray(arraySize),\r\n    size: arraySize,\r\n}\r\n\r\nconst arrayReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GENERATE_NEW_ARRAY:\r\n            return {\r\n                ...state,\r\n                array: action.payload,\r\n                size: action.payload.length,\r\n            }\r\n        case CHANGE_CURRENT_ARRAY:\r\n            return {\r\n                ...state,\r\n                array: action.payload,\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default arrayReducer;","export const SET_ALGORITHM = 'SET_ALGORITHM';\r\nexport const SET_ORDER = 'SET_ORDER';","export const randomizeAlgsInfo = () => {\r\n    //prepare random alg\r\n    let algNumber = Math.floor(Math.random() * (6 - 1) + 1);\r\n    let algName;\r\n    if(algNumber === 1) algName = 'insertion';\r\n    if(algNumber === 2) algName = 'selection';\r\n    if(algNumber === 3) algName = 'bubble';\r\n    if(algNumber === 4) algName = 'merge';\r\n    if(algNumber === 5) algName = 'quick';\r\n\r\n    //prepare random order\r\n    let orderNumber = Math.floor(Math.random() * (3 - 1) + 1);\r\n    let orderName;\r\n    if(orderNumber === 1) orderName = 'ascending';\r\n    if(orderNumber === 2) orderName ='descending';\r\n\r\n    return ({\r\n        algorithm: algName,\r\n        order: orderName,\r\n    });\r\n}","//types\r\nimport {\r\n    SET_ALGORITHM,\r\n    SET_ORDER,\r\n} from './types';\r\n\r\n//utils\r\nimport { randomizeAlgsInfo } from '../../logic/algorithmsLogic';\r\n\r\nconst { algorithm , order} = randomizeAlgsInfo();\r\n\r\nconst initialState = {\r\n    algorithm,\r\n    order,\r\n}\r\n\r\nconst algorithmsReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SET_ALGORITHM:\r\n            return ({\r\n                ...state,\r\n                algorithm: action.payload,\r\n            });\r\n        case SET_ORDER:\r\n            return ({\r\n                ...state,\r\n                order: action.payload,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default algorithmsReducer;","export const SET_MILLISECONDS = 'SET_MILLISECONDS';\r\nexport const SET_FRAMES = 'SET_FRAMES';\r\nexport const SET_STATUS = 'SET_STATUS';","import {\r\n    SET_MILLISECONDS,\r\n    SET_FRAMES,\r\n    SET_STATUS,\r\n} from './types';\r\n\r\nconst initialState = {\r\n    frames: [],\r\n    status: 'domant',\r\n    milliseconds: Math.floor(Math.random() * (401 - 10) + 10),\r\n    framesSize: 0,\r\n}\r\n\r\nconst animationReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SET_FRAMES:\r\n            return {\r\n                ...state,\r\n                frames: action.payload,\r\n                framesSize: action.payload.length,\r\n            }\r\n        case SET_MILLISECONDS:\r\n            return {\r\n                ...state,\r\n                milliseconds: action.payload,\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default animationReducer;","import { combineReducers } from 'redux';\r\n\r\nimport arrayReducer from './array/reducer';\r\nimport algorithmsReducer from './algorithm/reducer';\r\nimport animationReducer from './animation/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    arrayData: arrayReducer,\r\n    algorithms: algorithmsReducer,\r\n    animation: animationReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n//root reducer\r\nimport rootReducer from './rootReducer';\r\n\r\nconst middleware = [];\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React from 'react';\r\n\r\n//rsuite\r\nimport {\r\n    Button,\r\n} from 'rsuite';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\n\r\n//scoped styles\r\nconst styles = {\r\n    button: {\r\n        width: '80%',\r\n        height: '12%',\r\n        position: 'relative',\r\n        left: '10%',\r\n        borderRadius: 40,\r\n        fontFamily: '\"Poppins\", sans-serif',\r\n        marginBottom: 15,\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    status: state.animation.status,\r\n})\r\n\r\nconst LargeButton = ({active, title, action, status}) => {\r\n    return (\r\n        <>\r\n            <Button \r\n            style={{\r\n                ...styles.button,\r\n                fontSize: active ? 50 : 30,\r\n                 border: active ? '0px solid black' : '5px solid black',\r\n                 backgroundColor: active ? '#000000' : '#ffffff',\r\n                 color: active ? '#ffffff' : '#000000',\r\n            }}\r\n            onClick={action}\r\n            disabled={status === 'active'}\r\n            >{title}</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(React.memo(LargeButton));\r\n","import {\r\n    GENERATE_NEW_ARRAY,\r\n    CHANGE_CURRENT_ARRAY,\r\n} from './types';\r\n\r\nimport {\r\n    createNewArray\r\n} from '../../logic/arrayLogic';\r\n\r\nexport const generateNewArray = (size) => {\r\n    const array = createNewArray(size);\r\n    return ({\r\n        type: GENERATE_NEW_ARRAY,\r\n        payload: array,\r\n    });\r\n}\r\n\r\nexport const changeCurrentArray = array => ({\r\n    type: CHANGE_CURRENT_ARRAY,\r\n    payload: array,\r\n});","import {\r\n    SET_MILLISECONDS,\r\n    SET_FRAMES,\r\n    SET_STATUS,\r\n} from './types';\r\n\r\nexport const setMilliseconds = milliseconds => ({\r\n    type: SET_MILLISECONDS,\r\n    payload: milliseconds,\r\n});\r\n\r\nexport const setFrames = frames => ({\r\n    type: SET_FRAMES,\r\n    payload: frames,\r\n});\r\n\r\nexport const setStatus = status => ({\r\n    type: SET_STATUS,\r\n    payload: status,\r\n})","import React from 'react';\r\n\r\n//rsuite\r\nimport {\r\n    Button,\r\n} from 'rsuite';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    setAlgorithm\r\n} from '../../redux';\r\n\r\n//scoped styles\r\nconst styles = {\r\n    button: {\r\n        width: '48%',\r\n        height: '100%',\r\n        position: 'relative',\r\n        borderRadius: 40,\r\n        fontFamily: '\"Poppins\", sans-serif',\r\n        marginBottom: 10,\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    algorithm: state.algorithms.algorithm,\r\n    status: state.animation.status,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setAlgorithm: algorithm => dispatch(setAlgorithm(algorithm)),\r\n})\r\n\r\nconst SmallButton = ({\r\n    alg, algorithm, position, setAlgorithm, status\r\n}) => {\r\n\r\n    //click callback\r\n    const handleClick = () => {\r\n        if(alg !== algorithm) setAlgorithm(alg);\r\n    }\r\n    return (\r\n        <>\r\n            <Button \r\n            style={{\r\n                ...styles.button,\r\n                 left: position === 'left' ? 0 : null,\r\n                 marginLeft: position === 'right' ? '4%' : position === 'center' ? '26%' : 0,\r\n                 border: alg === algorithm ? '0px solid black' : '5px solid black',\r\n                 backgroundColor: alg === algorithm ? '#000000' : '#ffffff',\r\n                 color: alg === algorithm ? '#ffffff' : '#000000',\r\n            }}\r\n            onClick={handleClick}\r\n            disabled={status === 'active'}\r\n            ><div style={{display: 'flex', flexDirection: 'row'}}>\r\n                <div style={{marginLeft: 10, fontSize: 30, }}>{alg}</div>\r\n                <div style={{marginLeft: 10, fontSize: 20, paddingTop: 10, }}>sort</div>\r\n            </div></Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(\r\nmapStateToProps,\r\nmapDispatchToProps,\r\n)(React.memo(SmallButton));\r\n","import {\r\n   SET_ALGORITHM,\r\n   SET_ORDER,\r\n} from './types';\r\n\r\nexport const setAlgorithm = algorithm => ({\r\n    type: SET_ALGORITHM,\r\n    payload: algorithm,\r\n});\r\n\r\nexport const setOrder = order => ({\r\n    type: SET_ORDER,\r\n    payload: order,\r\n});\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n//rsuite\r\nimport {\r\n    Button,\r\n} from 'rsuite';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    setOrder,\r\n} from '../../redux';\r\n\r\n//scoped styles\r\nconst styles = {\r\n    button: {\r\n        width: '48%',\r\n        height: '100%',\r\n        position: 'relative',\r\n        borderRadius: 40,\r\n        fontFamily: '\"Poppins\", sans-serif',\r\n        fontSize: 30,\r\n        marginBottom: 10,\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentOrder: state.algorithms.order,\r\n    status: state.animation.status,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setOrder: order => dispatch(setOrder(order)),\r\n})\r\n\r\nconst OrderButton = ({order, currentOrder, position, setOrder, status}) => {\r\n\r\n    const handleClick = () => {\r\n        if(order !== currentOrder) setOrder(order);\r\n    }\r\n    return (\r\n        <>\r\n            <Button \r\n            style={{\r\n                ...styles.button,\r\n                 left: position === 'left' ? 0 : null,\r\n                 marginLeft: position === 'right' ? '4%' : position === 'center' ? '26%' : 0,\r\n                 border: order === currentOrder ? '0px solid black' : '5px solid black',\r\n                 backgroundColor: order === currentOrder ? '#000000' : '#ffffff',\r\n                 color: order === currentOrder ? '#ffffff' : '#000000',\r\n            }}\r\n            onClick={handleClick}\r\n            disabled={status === 'active'}\r\n            >{order}</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(\r\nmapStateToProps,\r\nmapDispatchToProps,\r\n)(React.memo(OrderButton));\r\n","import React from 'react';\r\n\r\n//scoped styles\r\nimport styles from '../styles/title.module.css';\r\n\r\nconst Title = ({content}) => {\r\n    return (\r\n        <>\r\n            <div className={styles.container} >\r\n                {content}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Title);\r\n","import React from 'react';\r\nimport styles from '../styles/actioncontainer.module.css';\r\n\r\n\r\nconst ActionContainer = ({children}) => {\r\n    return (\r\n        <>\r\n            <div className={styles.container}>\r\n                {children}\r\n            </div>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(ActionContainer);\r\n","const bubbleSort =  (decreasing, rawArray) => {\r\n    let swapped;\r\n    let holder;\r\n    let copyArray = rawArray;\r\n    let frames = []; // this will hold all frames from the sorting process\r\n    while(true){\r\n        swapped = false;\r\n        for(let counter = 0; counter < rawArray.length - 1; counter++){ \r\n            copyArray[counter].className = \"inComparison\";\r\n            copyArray[counter + 1].className = \"inComparison\";\r\n            frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n            if(decreasing){\r\n                if(rawArray[counter].number < rawArray[counter + 1].number){\r\n                    copyArray[counter].className = \"wronglyOrdered\";\r\n                    copyArray[counter + 1].className = \"wronglyOrdered\";\r\n                    frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n    \r\n                    holder = copyArray[counter].number;\r\n                    copyArray[counter].number = copyArray[counter + 1].number;\r\n                    copyArray[counter + 1].number = holder;\r\n                    swapped = true;\r\n                    frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n                }\r\n\r\n            }else{\r\n                if(rawArray[counter].number > rawArray[counter + 1].number){\r\n                    copyArray[counter].className = \"wronglyOrdered\";\r\n                    copyArray[counter + 1].className = \"wronglyOrdered\";\r\n                    frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n    \r\n                    holder = copyArray[counter].number;\r\n                    copyArray[counter].number = copyArray[counter + 1].number;\r\n                    copyArray[counter + 1].number = holder;\r\n                    swapped = true;\r\n                    frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n                }\r\n            }\r\n\r\n            if(copyArray[counter].className !== \"initial\"){\r\n                copyArray[counter].className = \"initial\";\r\n                copyArray[counter + 1].className = \"initial\";\r\n                frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n            }\r\n        }\r\n\r\n        if(!swapped) break;\r\n    }\r\n\r\n    return frames;\r\n}\r\n\r\nexport default bubbleSort;","const selectionSort = (decreasing, rawArray) => {\r\n    let selectionLimit = rawArray.length - 1;\r\n    let holder;\r\n    let copyArray = rawArray;\r\n    let frames = [];\r\n    let criteria;\r\n    let indexOfCriteria = null;\r\n\r\n    while(selectionLimit > 0) {\r\n        criteria  = decreasing ? Infinity : -Infinity;\r\n        \r\n        //find the largest number;\r\n        for(let counter = 0; counter <= selectionLimit; counter++) {\r\n            copyArray[counter].className = \"inComparison\";\r\n            frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n            if(decreasing){\r\n                if(copyArray[counter].number <= criteria) {\r\n                    //remove previous smallest\r\n                    if((indexOfCriteria || indexOfCriteria === 0) && indexOfCriteria !== selectionLimit + 1){\r\n                       copyArray[indexOfCriteria].className = \"initial\";\r\n                       frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n                   }\r\n   \r\n                   indexOfCriteria = counter;\r\n                   criteria = copyArray[counter].number;\r\n                   //target this one as smallest\r\n                   copyArray[counter].className = \"wronglyOrdered\";\r\n                   frames.push(JSON.parse(JSON.stringify(copyArray)));  \r\n               }\r\n            }else{\r\n                \r\n                if(copyArray[counter].number >= criteria) {\r\n                    //remove previous largest\r\n                    if((indexOfCriteria || indexOfCriteria === 0) && indexOfCriteria !== selectionLimit + 1){\r\n                       copyArray[indexOfCriteria].className = \"initial\";\r\n                       frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n                   }\r\n   \r\n                   indexOfCriteria = counter;\r\n                   criteria = copyArray[counter].number;\r\n                   //target this one as largest\r\n                   copyArray[counter].className = \"wronglyOrdered\";\r\n                   frames.push(JSON.parse(JSON.stringify(copyArray)));  \r\n               }\r\n            }\r\n\r\n            if(copyArray[counter].className !== \"wronglyOrdered\"){\r\n                copyArray[counter].className = \"initial\";\r\n                frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n            }\r\n\r\n        }\r\n        \r\n        if(indexOfCriteria !== selectionLimit){\r\n            copyArray[selectionLimit].className = \"wronglyOrdered\";\r\n            frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n        }\r\n\r\n        //swap the criteria to the index of current limit\r\n        holder = copyArray[selectionLimit].number;\r\n        copyArray[selectionLimit].number = copyArray[indexOfCriteria].number;\r\n        copyArray[indexOfCriteria].number = holder;\r\n        frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n\r\n        copyArray[selectionLimit].className = \"sorted\";\r\n        frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n        \r\n        selectionLimit--;\r\n    }\r\n\r\n    return frames;\r\n}\r\n\r\nexport default selectionSort;","const insertionSort = (decreasing, rawArray) => {\r\n    let holder;\r\n    let copyArray = rawArray;\r\n    let frames = [];\r\n    \r\n    for(let counter = 0; counter < copyArray.length; counter++) {\r\n        for(let compare = counter; compare > 0; compare--) {\r\n            copyArray[compare].className = \"inComparison\";\r\n            copyArray[compare - 1].className = \"inComparison\";\r\n            frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n            \r\n            if(decreasing){\r\n                if(copyArray[compare].number > copyArray[compare - 1].number) {\r\n                    copyArray[compare].className = \"wronglyOrdered\";\r\n                    copyArray[compare - 1].className = \"wronglyOrdered\";\r\n                    frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n    \r\n                    holder = copyArray[compare];\r\n                    copyArray[compare] = copyArray[compare - 1];\r\n                    copyArray[compare - 1] = holder;\r\n                    frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n                }\r\n\r\n            }else{\r\n                if(copyArray[compare].number < copyArray[compare - 1].number) {\r\n                    copyArray[compare].className = \"wronglyOrdered\";\r\n                    copyArray[compare - 1].className = \"wronglyOrdered\";\r\n                    frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n    \r\n                    holder = copyArray[compare];\r\n                    copyArray[compare] = copyArray[compare - 1];\r\n                    copyArray[compare - 1] = holder;\r\n                    frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n                }\r\n            }\r\n\r\n            copyArray[compare].className = \"initial\";\r\n            copyArray[compare - 1].className = \"initial\";\r\n            frames.push(JSON.parse(JSON.stringify(copyArray)));\r\n        }\r\n    }\r\n    \r\n    return frames;\r\n    \r\n}\r\n\r\nexport default insertionSort;","const quickSort = (decreasing, rawArray, start, end) => {\r\n    const partition = (rawArray, start, end) => {\r\n        \r\n        let subframes = [];\r\n        let pivot = rawArray[end].number;\r\n    \r\n        rawArray[end].className = \"wronglyOrdered\";\r\n        subframes.push(JSON.parse(JSON.stringify(rawArray)));\r\n\r\n        let pivotIndex = start - 1; // this value will be used to determine the sorted position of the pivot\r\n        let holder;\r\n        \r\n        for(let counter = start; counter <= end - 1; counter++){\r\n            rawArray[counter].className = \"inComparison\";\r\n            subframes.push(JSON.parse(JSON.stringify(rawArray)));\r\n            //if the current element is smaller than or equal to the pivot, \r\n            if(decreasing){\r\n                if(rawArray[counter].number >= pivot){\r\n                    pivotIndex++;\r\n    \r\n                    //swap the position of the pivot index with that of the counter\r\n                    holder = rawArray[pivotIndex];\r\n                    rawArray[pivotIndex] = rawArray[counter];\r\n                    rawArray[counter] = holder;\r\n                    subframes.push(JSON.parse(JSON.stringify(rawArray)));\r\n    \r\n                    rawArray[pivotIndex].className = \"initial\";\r\n                    rawArray[counter].className = \"initial\";\r\n                    subframes.push(JSON.parse(JSON.stringify(rawArray)));\r\n    \r\n                }\r\n\r\n            }else{\r\n                if(rawArray[counter].number <= pivot){\r\n                    pivotIndex++;\r\n    \r\n                    //swap the position of the pivot index with that of the counter\r\n                    holder = rawArray[pivotIndex];\r\n                    rawArray[pivotIndex] = rawArray[counter];\r\n                    rawArray[counter] = holder;\r\n                    subframes.push(JSON.parse(JSON.stringify(rawArray)));\r\n    \r\n                    rawArray[pivotIndex].className = \"initial\";\r\n                    rawArray[counter].className = \"initial\";\r\n                    subframes.push(JSON.parse(JSON.stringify(rawArray)));\r\n    \r\n                }\r\n            }\r\n\r\n            rawArray[counter].className = \"initial\";\r\n            subframes.push(JSON.parse(JSON.stringify(rawArray)));\r\n\r\n        }\r\n\r\n        rawArray[pivotIndex + 1].className = \"wronglyOrdered\";\r\n        subframes.push(JSON.parse(JSON.stringify(rawArray)));\r\n        \r\n        //swap the end of the array with whatever is on the pivot index\r\n        holder = rawArray[pivotIndex + 1];\r\n        rawArray[pivotIndex + 1] = rawArray[end];\r\n        rawArray[end] = holder;\r\n        subframes.push(JSON.parse(JSON.stringify(rawArray)));\r\n\r\n\r\n        rawArray[end].className = \"initial\";\r\n        rawArray[pivotIndex + 1].className = \"sorted\";\r\n        subframes.push(JSON.parse(JSON.stringify(rawArray)));\r\n\r\n\r\n        return [pivotIndex + 1, subframes];\r\n    }\r\n    \r\n    let frames = [];\r\n    let stack = [];\r\n    let top = - 1;\r\n    stack[++top] = start;\r\n    stack[++top] = end;\r\n\r\n    while(top >= 0){\r\n        end = stack[top--];\r\n        start = stack[top--];\r\n\r\n        let [positionOfNextPivot, subframes] = partition(rawArray, start, end);\r\n        frames = frames.concat(subframes);\r\n\r\n        if(positionOfNextPivot - 1 > start){\r\n            stack[++top] = start;\r\n            stack[++top] = positionOfNextPivot - 1;\r\n        }\r\n\r\n        if(positionOfNextPivot + 1 < end){\r\n            stack[++top] = positionOfNextPivot + 1;\r\n            stack[++top] = end;\r\n        }\r\n    }\r\n    \r\n    return frames;\r\n}\r\n\r\nexport default quickSort;","const mergeSort = (decreasing, arr,  n) =>\r\n    { \r\n          \r\n        const  merge = (arr, l, m, r) => \r\n            { \r\n                let i, j, k; \r\n                let n1 = m - l + 1; \r\n                let n2 = r - m; \r\n                let subframes = [];\r\n                \r\n                /* create temp arrays */\r\n                let L = []; \r\n                let R = []; \r\n                \r\n                /* Copy data to temp arrays L[] \r\n                and R[] */\r\n                for (i = 0; i < n1; i++) \r\n                    L[i] = arr[l + i]; \r\n\r\n                for (j = 0; j < n2; j++) \r\n                    R[j] = arr[m + 1+ j]; \r\n                \r\n                /* Merge the temp arrays back into \r\n                arr[l..r]*/\r\n                i = 0; \r\n                j = 0; \r\n                k = l; \r\n                let holder;\r\n                while (i < n1 && j < n2) \r\n                { \r\n\r\n                    //find index of L[i] and index of R[j] in raw\r\n                    let positionL;\r\n                    let positionR;\r\n                    let indexInRawL = L[i].indexInArray;\r\n                    let indexInRawR = R[j].indexInArray;\r\n\r\n                    //find L[i] position in the raw array;\r\n                    for(let counter = 0; counter < arr.length; counter++){\r\n                        if(indexInRawL === arr[counter].indexInArray) positionL = counter;\r\n                    }\r\n                    //find L[i] position in the raw array;\r\n                    for(let counter = 0; counter < arr.length; counter++){\r\n                        if(indexInRawR === arr[counter].indexInArray) positionR = counter;\r\n                    }\r\n\r\n                    arr[positionL].className = \"inComparison\";\r\n                    arr[positionR].className = \"inComparison\";\r\n                    subframes.push(JSON.parse(JSON.stringify(arr)));\r\n\r\n                    if(decreasing){\r\n\r\n                        if (L[i].number >= R[j].number) \r\n                        { \r\n                            arr[positionL].className = \"wronglyOrdered\";\r\n                            arr[k].className = \"wronglyOrdered\";\r\n                            subframes.push(JSON.parse(JSON.stringify(arr)));\r\n                            \r\n                            //perform a swap instead of an over right;\r\n                            holder = arr[k]\r\n                            arr[k] = arr[positionL];\r\n                            arr[positionL] = holder; \r\n                            i++; \r\n                            subframes.push(JSON.parse(JSON.stringify(arr)));\r\n\r\n                            arr[positionL].className = \"initial\";\r\n                            arr[k].className = \"initial\";\r\n                            subframes.push(JSON.parse(JSON.stringify(arr)));\r\n                        } \r\n                        else\r\n                        { \r\n                            arr[positionR].className = \"wronglyOrdered\";\r\n                            arr[k].className = \"wronglyOrdered\";\r\n                            subframes.push(JSON.parse(JSON.stringify(arr)));\r\n\r\n                            //perform a swap instead of an over right;\r\n                            holder = arr[k]\r\n                            arr[k] = arr[positionR];\r\n                            arr[positionR] = holder; \r\n                            j++; \r\n                            subframes.push(JSON.parse(JSON.stringify(arr)));\r\n\r\n                            arr[positionR].className = \"initial\";\r\n                            arr[k].className = \"initial\";\r\n                            subframes.push(JSON.parse(JSON.stringify(arr))); \r\n                        }\r\n\r\n                    }else{\r\n                        if (L[i].number <= R[j].number) \r\n                        { \r\n                            arr[positionL].className = \"wronglyOrdered\";\r\n                            arr[k].className = \"wronglyOrdered\";\r\n                            subframes.push(JSON.parse(JSON.stringify(arr)));\r\n                            \r\n                            //perform a swap instead of an over right;\r\n                            holder = arr[k]\r\n                            arr[k] = arr[positionL];\r\n                            arr[positionL] = holder; \r\n                            i++; \r\n                            subframes.push(JSON.parse(JSON.stringify(arr)));\r\n\r\n                            arr[positionL].className = \"initial\";\r\n                            arr[k].className = \"initial\";\r\n                            subframes.push(JSON.parse(JSON.stringify(arr)));\r\n                        } \r\n                        else\r\n                        { \r\n                            arr[positionR].className = \"wronglyOrdered\";\r\n                            arr[k].className = \"wronglyOrdered\";\r\n                            subframes.push(JSON.parse(JSON.stringify(arr)));\r\n\r\n                            //perform a swap instead of an over right;\r\n                            holder = arr[k]\r\n                            arr[k] = arr[positionR];\r\n                            arr[positionR] = holder; \r\n                            j++; \r\n                            subframes.push(JSON.parse(JSON.stringify(arr)));\r\n\r\n                            arr[positionR].className = \"initial\";\r\n                            arr[k].className = \"initial\";\r\n                            subframes.push(JSON.parse(JSON.stringify(arr))); \r\n                        } \r\n                    }\r\n\r\n\r\n                    k++;\r\n                    arr[positionL].className = \"initial\";\r\n                    arr[k].className = \"initial\";\r\n                    arr[positionR].className = \"initial\";\r\n                    subframes.push(JSON.parse(JSON.stringify(arr)));  \r\n                } \r\n\r\n                for(let counter = 0; counter < arr.length; counter++){\r\n                    if(arr[counter].className !== \"initial\") arr[counter].className = \"initial\";\r\n                }\r\n                \r\n                /* Copy the remaining elements of  \r\n                L[], if there are any */\r\n                while (i < n1) \r\n                { \r\n                    arr[k] = L[i]; \r\n                    i++; \r\n                    k++; \r\n                } \r\n                \r\n                /* Copy the remaining elements of \r\n                R[], if there are any */\r\n                while (j < n2) \r\n                { \r\n                    arr[k] = R[j];\r\n                    \r\n                    j++; \r\n                    k++; \r\n                } \r\n                subframes.push(JSON.parse(JSON.stringify(arr))); \r\n\r\n                return subframes;\r\n            }\r\n        let frames = []; \r\n        // For current size of subarrays to \r\n        // be merged curr_size varies from  \r\n        // 1 to n/2 \r\n        let curr_size;  \r\n                      \r\n        // For picking starting index of  \r\n        // left subarray to be merged \r\n        let left_start; \r\n                          \r\n          \r\n        // Merge subarrays in bottom up  \r\n        // manner. First merge subarrays  \r\n        // of size 1 to create sorted  \r\n        // subarrays of size 2, then merge \r\n        // subarrays of size 2 to create  \r\n        // sorted subarrays of size 4, and \r\n        // so on. \r\n        for (curr_size = 1; curr_size <= n-1;  \r\n                      curr_size = 2*curr_size) \r\n        { \r\n              \r\n            // Pick starting point of different \r\n            // subarrays of current size \r\n            for (left_start = 0; left_start < n-1; \r\n                        left_start += 2*curr_size) \r\n            { \r\n                // Find ending point of left  \r\n                // subarray. mid+1 is starting  \r\n                // point of right \r\n                let mid = Math.min(left_start + curr_size - 1, n-1); \r\n          \r\n                let right_end = Math.min(left_start  \r\n                             + 2*curr_size - 1, n-1); \r\n          \r\n                // Merge Subarrays arr[left_start...mid] \r\n                // & arr[mid+1...right_end] \r\n                let subframes = merge(arr, left_start, mid, right_end); \r\n                frames = frames.concat(subframes);\r\n            } \r\n        } \r\n\r\n        return frames;\r\n} \r\n\r\nexport default mergeSort;\r\n","import React from 'react';\r\n\r\n//scoped styles\r\nimport styles from '../styles/actionarea.module.css';\r\n\r\n//components\r\nimport LargeButton from './buttons/LargeButton';\r\nimport SmallButton from './buttons/SmallButton';\r\nimport OrderButton from './buttons/OrderButton';\r\nimport Title from './Title';\r\nimport ActionContainer from './ActionContainer';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { \r\n   generateNewArray,\r\n   setFrames,\r\n   setStatus,\r\n} from '../redux';\r\n\r\n//algorithms\r\nimport bubbleSort from '../algorithms/bubbleSort';\r\nimport selectionSort from '../algorithms/selectionSort';\r\nimport insertionSort from '../algorithms/insertionSort';\r\nimport quickSort from '../algorithms/quickSort';\r\nimport mergeSort from '../algorithms/mergeSort';\r\n\r\nconst mapStateToProps = state => ({\r\n   size: state.arrayData.size,\r\n   array: state.arrayData.array,\r\n   order: state.algorithms.order,\r\n   algorithm: state.algorithms.algorithm,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   generateNewArray: size => dispatch(generateNewArray(size)),\r\n   setFrames: frames => dispatch(setFrames(frames)),\r\n   setStatus: status => dispatch(setStatus(status)),\r\n})\r\n\r\nconst ActionArea = ({size, order, algorithm, array, generateNewArray, setFrames, setStatus, }) => {\r\n\r\n   const sort = () => {\r\n      let frames;\r\n      let descending = order === 'ascending' ? false : true;\r\n      if(algorithm === 'insertion') frames = insertionSort(descending, JSON.parse(JSON.stringify(array)));\r\n      if(algorithm === 'selection') frames = selectionSort(descending, JSON.parse(JSON.stringify(array)));\r\n      if(algorithm === 'bubble') frames = bubbleSort(descending, JSON.parse(JSON.stringify(array)));\r\n      if(algorithm === 'quick') frames = quickSort(descending, JSON.parse(JSON.stringify(array)), 0, array.length - 1);\r\n      if(algorithm === 'merge') frames = mergeSort(descending, JSON.parse(JSON.stringify(array)), array.length);\r\n      \r\n\r\n      let sortedArray = frames[frames.length - 1];\r\n      for(let counter = 0; counter < sortedArray.length; counter++){\r\n          sortedArray[counter].className = \"sorted\";\r\n      }\r\n      frames.push(JSON.parse(JSON.stringify(sortedArray)));\r\n\r\n      return frames;\r\n  }\r\n\r\n  const sortAction = () => {\r\n      const frames = sort();\r\n      setFrames(frames);\r\n      setStatus('active');\r\n  }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <LargeButton\r\n             active\r\n             title=\"Go\"\r\n             action={sortAction}\r\n             />\r\n             <LargeButton\r\n             title=\"Generate New Array\"\r\n             action={() => generateNewArray(size)}\r\n             />\r\n             <Title\r\n             content=\"algorithms\"\r\n             />\r\n             <ActionContainer>\r\n             <SmallButton\r\n                alg=\"insertion\"\r\n                position=\"left\"\r\n                />\r\n                <SmallButton\r\n                alg=\"selection\"\r\n                position=\"right\"\r\n                />\r\n             </ActionContainer>\r\n             <ActionContainer>\r\n             <SmallButton\r\n                alg=\"bubble\"\r\n                position=\"left\"\r\n                />\r\n                <SmallButton\r\n                alg=\"quick\"\r\n                position=\"right\"\r\n                />\r\n             </ActionContainer>\r\n             <ActionContainer>\r\n             <SmallButton\r\n                alg=\"merge\"\r\n                position=\"center\"\r\n                />\r\n             </ActionContainer>\r\n             <Title\r\n             content=\"order\"\r\n             />\r\n             <ActionContainer>\r\n               <OrderButton\r\n                order=\"ascending\"\r\n                position=\"left\"\r\n                />\r\n                <OrderButton \r\n                order=\"descending\"\r\n                position=\"right\"\r\n                />\r\n             </ActionContainer>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   mapDispatchToProps,\r\n)(React.memo(ActionArea));\r\n","import React from 'react';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => ({\r\n    size: state.arrayData.size,\r\n});\r\n\r\nconst ArrayMember = ({instance, lastmember, size}) => {\r\n\r\n    const height = 70 / size;\r\n    const className = instance.className;\r\n\r\n    const style = {\r\n        width: `${instance.number / 2.1}%`,\r\n        height: `${height}%`,\r\n        margin: '0 0 0 auto',\r\n        borderRadius: 10,\r\n        marginBottom: !lastmember ? 1.5 : 0,\r\n        backgroundColor: className === 'sorted' ? '#00ff26' : className === 'wronglyOrdered' ? '#ff0000' :\r\n        className === 'inComparison' ? '#eeff00' : '#000000',\r\n    }\r\n    return (\r\n        <div style={style} />\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(React.memo(ArrayMember));\r\n","import React from 'react';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\n\r\n//components\r\nimport ArrayMember from './ArrayMember';\r\n\r\nconst mapStateToProps = state => ({\r\n    array: state.arrayData.array,\r\n    size: state.arrayData.size,\r\n});\r\n\r\nconst ArrayContainer = ({array, size}) => {\r\n\r\n    const styles = {\r\n        container : {\r\n            width: '100%',\r\n            //three breakpoints system\r\n            height: size <= 40 ? '50%' : size <= 80 ? '66.66%' : '100%',\r\n            position: 'relative',\r\n            top: size < 40 ? '25%' : size <= 80 ? '14%' : 0,\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div style={styles.container}>\r\n                {\r\n                    array.map((instance, index) => <ArrayMember instance={instance} lastmember={index === size - 1} />)\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(React.memo(ArrayContainer));\r\n","import React from 'react';\r\nimport classes from '../styles/toastmessage.module.css';\r\n\r\nconst ToastMessage = ({ message, closeToast }) => {\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.content}>{message}</div>\r\n            <button className={classes.closeButton} onClick={closeToast}>OK</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(ToastMessage)\r\n","import React from 'react';\r\nimport styles from '../styles/screen.module.css';\r\nimport { IntervalContext } from '../App';\r\n\r\n//components\r\nimport ArrayContainer from './ArrayContainer';\r\n\r\n//toast\r\nimport { toast } from 'react-toastify';\r\nimport ToastMessage from './ToastMessage';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    changeCurrentArray,\r\n    setStatus,\r\n} from '../redux';\r\n\r\nconst mapStateToProps = state => ({\r\n    array: state.arrayData.array,\r\n    status: state.animation.status,\r\n    frames: state.animation.frames,\r\n    milliseconds: state.animation.milliseconds,\r\n    algorithm: state.algorithms.algorithm,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeArray: array => dispatch(changeCurrentArray(array)),\r\n    changeStatus: status => dispatch(setStatus(status)),\r\n});\r\n\r\nconst Screen = ({array, status, frames, milliseconds, changeArray, changeStatus, algorithm}) => {\r\n    //ref to hold animation interval\r\n    let animationInterval = React.useContext(IntervalContext);\r\n    //ref to hold animation position (position of current array in frame)\r\n    let animationPosition = React.useRef(0);\r\n\r\n    //run animation\r\n    React.useEffect(() => {\r\n        if(status === 'active') {\r\n            animationInterval.current = setInterval(() => {\r\n                changeArray(frames[animationPosition.current]);\r\n                animationPosition.current++; \r\n            }, milliseconds);\r\n        }\r\n    //eslint-disable-next-line\r\n    },[status]);\r\n\r\n    //stop animation\r\n    React.useEffect(() => {\r\n        if(JSON.stringify(array) === JSON.stringify(frames[frames.length - 1]) && status === 'active'){\r\n            clearInterval(animationInterval.current);\r\n            changeStatus('domant');\r\n            animationPosition.current = 0;\r\n            toast(\r\n                <ToastMessage message={`That's ${algorithm} sort for you!`} />,\r\n                {\r\n                    position: toast.POSITION.TOP_CENTER,\r\n                    hideProgressBar: true\r\n                }\r\n            );\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.container}>\r\n                <ArrayContainer />\r\n            </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(React.memo(Screen));\r\n","import React from 'react';\r\nimport css from '../styles/redirect.module.css';\r\n\r\nconst Redirect = ({text, url}) => {\r\n    const styles =  {\r\n        width: '10%',\r\n        height: '100%',\r\n        position: 'relative',\r\n        left: text === \"notes\" ? '43%' : '55%',\r\n        textAlign: 'center',\r\n        fontFamily: '\"Poppins\", sans-serif',\r\n        fontSize: 30,\r\n        color: '#b1b3b1',\r\n        cursor: 'pointer',\r\n    }\r\n    return (\r\n        <div style={styles}>\r\n            <a href={url} style={{position: 'relative', top: '30%'}} className={css.link}>{text}</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Redirect);\r\n","import React from 'react';\r\nimport { IntervalContext } from '../../App';\r\n\r\n//scoped css\r\nimport styles from '../../styles/cancelbutton.module.css';\r\n\r\n//toast\r\nimport { toast } from 'react-toastify';\r\nimport ToastMessage from '../ToastMessage';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { \r\n     setStatus,\r\n} from '../../redux';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    changeStatus: status => dispatch(setStatus(status)),\r\n});\r\n\r\nconst CancelButton = ({changeStatus}) => {\r\n    const animationInterval = React.useContext(IntervalContext);\r\n\r\n    const handleClick = () => {\r\n        clearInterval(animationInterval.current);\r\n        changeStatus('domant');\r\n        toast(\r\n            <ToastMessage\r\n            message=\"You've cleared an active animation. Press Go to resume!\"\r\n            />,\r\n            {\r\n                hideProgressBar: true,\r\n                position: toast.POSITION.TOP_LEFT,\r\n            }\r\n        );\r\n    }\r\n    return (\r\n        <div className={styles.container} onClick={handleClick}>\r\n            CANCEL ACTIVE ANIMATION\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps,\r\n)(React.memo(CancelButton));\r\n","import React from 'react'\r\nimport styles from '../styles/header.module.css';\r\n\r\n//component\r\nimport Redirect from './Redirect';\r\nimport CancelButton from './buttons/CancelButton';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => ({\r\n    status: state.animation.status,\r\n});\r\n\r\nconst Header = ({status}) => {\r\n    return (\r\n        <div className={styles.container}>\r\n            { status === 'active' && <CancelButton />}\r\n            <Redirect \r\n            text=\"notes\"\r\n            />\r\n            <Redirect \r\n            text=\"github\"\r\n            url=\"https://github.com/MbuthiaWaKihara/sorting-algorithms-visualizer-2\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(React.memo(Header));\r\n","import React from 'react';\r\nimport Slider from 'react-slider';\r\n\r\n//scoped styles\r\nimport '../styles/slider.css';\r\n\r\n//components\r\nimport Title from './Title';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    generateNewArray,\r\n    setMilliseconds,\r\n} from '../redux';\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    size: state.arrayData.size,\r\n    milliseconds: state.animation.milliseconds,\r\n    status: state.animation.status,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    generateArray: size => dispatch(generateNewArray(size)),\r\n    setMilliseconds: milliseconds => dispatch(setMilliseconds(milliseconds)),\r\n})\r\n\r\nconst ArrayControl = ({right, size, milliseconds, generateArray, setMilliseconds, status}) => {\r\n\r\n    const styles = {\r\n        container: {\r\n            position: 'relative',\r\n            left: right ? '10%': '5%',\r\n            width: '40%',\r\n            \r\n        },\r\n        title: {\r\n            width: '100%',\r\n            marginTop: 20,\r\n        }\r\n    }\r\n\r\n    const handleChange = value => {\r\n        if(right) {\r\n            setMilliseconds(value);\r\n        }else {\r\n            generateArray(value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <Slider\r\n            className=\"sliderbar\"\r\n            thumbClassName=\"sliderthumb\"\r\n            thumbActiveClassName=\"activethumb\"\r\n            max={right ? 400 : 120}\r\n            min={right ? 10 : 5}\r\n            value={right ? milliseconds : size}\r\n            onChange={handleChange}\r\n            invert={right}\r\n            disabled={status === 'active'}\r\n            />\r\n            <div style={styles.title}>\r\n                <Title content={right ? \"speed\" : \"size\"} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(React.memo(ArrayControl));\r\n","import React from 'react';\r\n\r\n//redux\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store';\r\n\r\n//rsuit\r\nimport { \r\n    Grid,\r\n    Row,\r\n    Col,\r\n } from 'rsuite';\r\n\r\n //components\r\n import ActionArea from './components/ActionArea';\r\n import Screen from './components/Screen';\r\n import Header from './components/Header';\r\n import ArrayControl from './components/ArrayControl';\r\n\r\n //scoped styles\r\n import classes from './styles/app.module.css';\r\n\r\n //toast\r\n import { toast } from 'react-toastify';\r\n import 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const IntervalContext = React.createContext();\r\ntoast.configure();\r\nconst App = () => {\r\n    const animationInterval = React.useRef();\r\n    return (\r\n        <>\r\n           <Provider store={store} >\r\n               <IntervalContext.Provider value={animationInterval}>\r\n               <Grid fluid className={classes.container}>\r\n                   <Row className={classes.main}>\r\n                       <Col className={classes.column}>\r\n                           <ActionArea />\r\n                       </Col>\r\n                       <Col className={classes.column1}>\r\n                            <div style={{\r\n                                width: '100%', height: '33.33%',\r\n                            }}>\r\n                                <Header />\r\n                                <div style={{\r\n                                    width: '100%',\r\n                                    height: '40%',\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                }}>\r\n                                    <ArrayControl />\r\n                                    <ArrayControl right/>\r\n                                </div>\r\n                            </div>\r\n                            <Screen />\r\n                       </Col>\r\n                   </Row>\r\n               </Grid>\r\n               </IntervalContext.Provider>\r\n           </Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n//global styles\r\nimport './styles/global.css';\r\n//rsuit default styles\r\nimport 'rsuite/lib/styles/index.less';\r\n\r\nconst rootNode = document.querySelector(\"#root\");\r\n\r\nReactDOM.render(<App/>, rootNode);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__3_BQV\",\"main\":\"app_main__1KMG0\",\"column\":\"app_column__A2Jcu\",\"column1\":\"app_column1__28Wjr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"toastmessage_container__11b3i\",\"content\":\"toastmessage_content__32jHH\",\"closeButton\":\"toastmessage_closeButton__BE8in\"};"],"sourceRoot":""}